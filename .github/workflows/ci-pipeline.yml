name: CI Pipeline

# This workflow runs when code is pushed to the main branch (including merges)
on:
  push:
    branches: [ main ]
    # Prevent running the entire workflow when changes are made to the .md files
    paths-ignore:
      - 'README.md'
      - 'enhancement-todos.md'

jobs:
  # Build and test the application
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Java 17 environment for the build
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Build the project and run tests
    - name: Build and test with Maven
      run: mvn -B clean verify
      timeout-minutes: 15 # timeout for just this step

    # Upload test reports if tests fail
    - name: Upload Test Reports (if failure)
      uses: actions/upload-artifact@v4
      if: failure()  # If the previous step (i.e. mvn verify) fails, failure() evaluates to true
      with:
        name: test-reports
        path: target/surefire-reports/

  # Run static code analysis to ensure code quality
  static-analysis:
    runs-on: ubuntu-latest
    # Only run after build and tests pass
    needs: build-and-test
    timeout-minutes: 15 # timeout for this 'static-analysis' job

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Run PMD to identify code quality issues
    - name: Run PMD
      uses: pmd/pmd-github-action@v1
      with:
        rulesets: 'rulesets/java/quickstart.xml'
        sourcePath: 'src/main/java' # Defines the directory containing the source code to analyze

    # Run SpotBugs for additional static analysis (includes FindSecBugs for security vulnerabilities)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Run SpotBugs with FindSecBugs
      run: mvn spotbugs:check

  # Scan for security issues and secrets
  security-scan:
    runs-on: ubuntu-latest
    # Only run after build and tests pass
    needs: build-and-test
    timeout-minutes: 10 # timeout for 'security-scan' job

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Full git history is needed for GitLeaks to work properly
        fetch-depth: 0

    # Scan for secrets and sensitive information in the codebase
    - name: GitLeaks Secret Scan
      id: gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true  # Allow the workflow to continue even if leaks are found

    # Only upload the SARIF file if leaks were detected
    - name: Upload GitLeaks Results
      uses: actions/upload-artifact@v4
      if: steps.gitleaks.outcome == 'failure'  # Only upload when GitLeaks finds issues
      with:
        name: gitleaks-results
        path: gitleaks-results.sarif
